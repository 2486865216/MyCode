<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.qiqi.Mybatis.EmployeeMapperPlus">
    <!--    自定义某个JavaBean的封装规则
                type:自定义规则的Java类型
                id:唯一id，方便引用
    -->
    <resultMap id="MySimpleEmp" type="com.qiqi.Mybatis.Employee">
<!--        指定主键列的封装规则
                column:指定哪一列
                property：指定对应的JavaBean属性
-->
        <id column="id" property="id"></id>
<!--        定义普通列封装规则-->
        <result column="lastname" property="lastname"/>
<!--        其它不指定的列会自动封装，我们只要写resultMap就把全部的映射规则写上-->
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
    </resultMap>
    <!--    resultMap:自定义结果集映射规则-->
    <select id="getEmployeeById" resultMap="MySimpleEmp">
        select * from employee where id = #{id}
    </select>
<!--    查询Employee的同时查询员工对应的部门-->
<!--    联合查询：级联属性封装结果集-->
    <resultMap id="MyDifEmp" type="com.qiqi.Mybatis.Employee">
        <id column="id" property="id"/>
        <result column="lastname" property="lastname"/>
        <result column="gender" property="gender"/>
        <result column="email" property="email"/>
        <result column="did" property="dept.id"/>
        <result column="dept_name" property="dept.DepartmentName"/>
    </resultMap>
    <resultMap id="MyDifEmp2" type="com.qiqi.Mybatis.Employee">
        <id column="id" property="id"/>
        <result column="lastname" property="lastname"/>
        <result column="gender" property="gender"/>
        <result column="email" property="email"/>
<!--        association可以指定联合的javaBean对象-->
<!--        property="dept"指定哪个属性是联合的对象
            javaType指定属性对象的类型，不能省略
-->
        <association property="dept" javaType="com.qiqi.Mybatis.Department">
            <id column="id" property="id"/>
            <result column="dept_name" property="DepartmentName"/>
        </association>
    </resultMap>
    <select id="getEmployeeAnddept" resultMap="MyDifEmp2">
        select e.id id,e.lastname lastname,e.email email,e.gender gender,e.d_id d_id
             ,d.id did,d.dept_name dept_name
        from employee e,tbl_dept d where e.d_id=d.id and e.id=#{id}
    </select>
<!--    使用association分布查询
            1.先按照员工id查询员工信息
            2.根据查询到的员工信息当中的d_id值去部门表查出部门信息
            3.部门设置到员工中
-->
    <resultMap id="MyEmpStep" type="com.qiqi.Mybatis.Employee">
        <id column="id" property="id"/>
        <result column="lastname" property="lastname"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
<!--        selece:表明当前属性是调用select指定的方法查出的结果
            column:指定将哪一列的值传递给这个方法

            使用select指定的方法（传入column指定的这列参数的值）查出对象，并封装给property指定的属性
-->
        <association property="dept"
                     select="com.qiqi.Mybatis.DepartmentMapper.getDeptById"
        column="d_id">
        </association>
    </resultMap>
    <select id="getEmployByIdStep" resultMap="MyEmpStep">
        select * from employee where id = #{id}
    </select>
<!--    延迟加载(按需加载)
            我们每次查询Employee对象的时候，会将Department一起查询出来
            部门信息在我们使用的时候再去查询
            分段查询的基础之上加上两个配置
-->
<!--======================association============================================-->
<!--    查询部门的时候将部门对应的所有员工信息也查询出来 注释在DepartmentMapper.xml中-->

    <select id="getEmpsByDeptId" resultType="com.qiqi.Mybatis.Employee">
        select * from employee where d_id = #{deptid}
    </select>

<!--    <discriminator javaType=""></discriminator>-->
<!--    鉴别器：mybatis可以使用discriminator判断某列的值，然后根据某列的值改变封装规则
            封装Employee
                如果查出的是女生，就把部门信息查询出来
                如果是男生，把lastname这一列的值赋给email
-->
    <resultMap id="MyEmpDept" type="com.qiqi.Mybatis.Employee">
        <id column="id" property="id"/>
        <result column="lastname" property="lastname"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
<!--        column:指定判断的列名
            javaType:列值对应的Java类型
            resultType:指定封装的结果类型
-->
        <discriminator javaType="String" column="gender">
            <case value="0" resultType="com.qiqi.Mybatis.Employee">
                <association property="dept"
                             select="com.qiqi.Mybatis.DepartmentMapper.getDeptById"
                             column="d_id">
                </association>
            </case>
            <case value="1" resultType="com.qiqi.Mybatis.Employee">
                <id column="id" property="id"/>
                <result column="lastname" property="lastname"/>
                <result column="lastname" property="email"/>
                <result column="gender" property="gender"/>
            </case>
        </discriminator>
    </resultMap>
    <select id="getEmpsByDeptIdDept" resultMap="MyEmpDept">
        select * from employee where id = #{id}
    </select>
</mapper>