<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiqi.mybatis.EmployeeMapper">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
<!--    <cache eviction="FIFO" flushInterval="60000" readOnly="false" size="1024"></cache>-->
<!--
        eviction:缓存的回收策略
            LRU - 最近最少使用的：移除最长时间不被使用的对象。
            FIFO- 先进先出：按对象进入缓存的顺序来移除它们。
            SOFT- 软引用：移除基于垃圾回收器状态和软引用规则的对象。
            WEAK- 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。
            默认的是LRU。
        flushInterval：缓存刷新间隔
            缓存多长时间清空一次，默认不清空，设置一个毫秒值
        readOnly:是否只读
            true：mybatis认为获取到的数据都是只读操作，不会修改数据
                  mybatis为了加快获取速度，直接会将数据在缓存中的引用交给用户，不安全，速度快
            false：mybatis认为获取到的数据可能会被修改
                  mybatis会利用序列化&反序列化的技术克隆一份新的数据给你，安全，速度慢
            size:缓存多少元素
            type：指定自定义缓存的全类名，
                    实现Cache接口即可
-->
    <select id="getMapper" resultType="com.qiqi.mybatis.Employee">
        select * from employee where id = #{id}
    </select>
</mapper>